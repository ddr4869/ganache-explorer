// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BlocksColumns holds the columns for the "blocks" table.
	BlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "number", Type: field.TypeInt},
		{Name: "gas_limit", Type: field.TypeInt},
		{Name: "gas_used", Type: field.TypeInt},
		{Name: "difficulty", Type: field.TypeInt},
		{Name: "time", Type: field.TypeUint64},
		{Name: "number_u64", Type: field.TypeUint64},
		{Name: "mix_digest", Type: field.TypeString},
		{Name: "nonce", Type: field.TypeInt},
		{Name: "coinbase", Type: field.TypeString},
		{Name: "root", Type: field.TypeString},
		{Name: "parent_hash", Type: field.TypeString},
		{Name: "tx_hash", Type: field.TypeString},
		{Name: "receipt_hash", Type: field.TypeString},
		{Name: "uncle_hash", Type: field.TypeString},
		{Name: "tx_count", Type: field.TypeInt},
	}
	// BlocksTable holds the schema information for the "blocks" table.
	BlocksTable = &schema.Table{
		Name:       "blocks",
		Columns:    BlocksColumns,
		PrimaryKey: []*schema.Column{BlocksColumns[0]},
	}
	// TransactionsColumns holds the columns for the "transactions" table.
	TransactionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "block_number", Type: field.TypeInt},
		{Name: "type", Type: field.TypeInt},
		{Name: "chain_id", Type: field.TypeInt},
		{Name: "nonce", Type: field.TypeInt},
		{Name: "to", Type: field.TypeString},
		{Name: "gas", Type: field.TypeInt},
		{Name: "gas_price", Type: field.TypeString},
		{Name: "gas_tip_cap", Type: field.TypeString},
		{Name: "gas_fee_cap", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "data", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "hash", Type: field.TypeString},
	}
	// TransactionsTable holds the schema information for the "transactions" table.
	TransactionsTable = &schema.Table{
		Name:       "transactions",
		Columns:    TransactionsColumns,
		PrimaryKey: []*schema.Column{TransactionsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BlocksTable,
		TransactionsTable,
	}
)

func init() {
}
